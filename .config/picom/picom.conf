# original options
# shadow = true;
# detect-rounded-corners = true;
# vsync = false;
# focus-exclude = [ "class_g = 'Rofi'",
# "class_g = 'dmenu'"]
# shadow-exclude = [ "class_g = 'Rofi'" ]
#backend = "glx"
backend = "glx"

#================================
# Glx backend
#================================

glx-no-stencil = true;
glx-no-rebind-pixmap = true;
#use-damage = true;
use-damage = true;

xrender-sync-fence = true;
glx-use-copysubbuffermesa = false;
glx-copy-from-front = true;

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows. cmd line -c
#shadow = true;
shadow = false;
# Don't draw shadows on DND windows.
# no-dnd-shadow = true;

# The translucency for shadows. (default .75). cmd line -r
shadow-opacity = 0.66;

# The blur radius for shadows. (default 12). cmd line -o
shadow-radius = 6;

# The left offset for shadows. (default -15). cmd line -l
shadow-offset-x = -9;

# The top offset for shadows. (default -15). cmd line -t
shadow-offset-y = -8;

shadow-exclude = ["!focused", "!name~=''", "class_g = 'Rofi'", "name = 'Notification'"]

dropdown_menu = { shadow = false; };
popup_menu    = { shadow = false; };
utility       = { shadow = false; };


#################################
#
# Opacity
#
#################################

inactive-opacity = 0.9;
active-opacity = 1;
frame-opacity = 1;
#inactive-opacity-override = false;
#inactive-opacity-override = true;

# Dim inactive windows. (0.0 - 1.0)
# DISABLED FOR THE MOMENT, TO CHECK FOR CRASHES
inactive-dim = 0.2;
winactive-dim-fixed = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
# DISABLED to check if this is the cause of issues with opacity not always restored for focused windows
detect-client-opacity = true;

#opacity-rule = ["95:class_g = 'Tilix'"];


#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;

# Fade windows in/out when opening/closing
no-fading-openclose = true;

fade-delta = 5;
fade-in-step = 0.03;
fade-out-step = 0.03;

#==============================
# Misc settings
#==============================

detect-rounded-corners = true;
#corner-radius = 20;

vsync = true;

focus-exclude = [ "class_g = 'Rofi'", "class_g = 'dmenu'"]

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus). THIS setting does not work well with BSPWM!
#mark-ovredir-focused = true;

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
# SET TO FALSE when using BSPWM
use-ewmh-active-win = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = false;

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
# detect-client-leader = true;
